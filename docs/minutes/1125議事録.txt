# 11月25日(日)　進捗報告
メンバー：全員
場所：電話会議
時間：21：00～24：15  
### 内容
+ 今日の議題
	+ 機能仕様書
		+ コンセプトが伝わりにくい
		+ マッチングのインプットと処理とアウトプットの形をわかりやすくする。
		+ マッチングシステムについて何が目的で、それを達成する方法としてどういったことをするのか、それに必要な機能は何か明確にする
	+ 画面シナリオ
		+ 全ての機能があるか、不十分でないか確認する
		+ 機能仕様書の３つ目の問題が明確化した後にそれを明記する
	+ クラス図
		+ アカウントとユーザー
		+ その他クラスの構成
	+ シーケンス図
		+ 作成するところを分ける
		+ 各部分に担当を割り振る
		+ シーケンス図の形についてある程度統一を測る<-プログラムの大まかな構成がきまる？
+ 機能仕様書
	+ 5.3.4 アカウント検索
||||
---||||
表示順 |ドロップダウン ||必須項目
Ex)類似度順など
へ変更.
		+ mysqlからの取得順を操作.
			+ daoに取得順を操作する部分を作成.
			+ 最後にログインした順
			+ おすすめ順(類似度)
			+ 新しいユーザー順
	+ 5.1.8 マッチング
		+ 理由はあとでたつゆきに書いてもらう.
		+ 下記を追加
			+ 類似度の算出の入力値は5.1.7の際に入力したエニアグラムの結果と価値観の項目とする.
			+ 類似度の算出方法はエニアグラムのユークリッド距離(d :0<=d<=30)と,一致した価値観の数の定数倍の和とする.なお,計算式にすると以下の通り.
			+ 類似度＝30-ユークリッド距離+(一致した価値観の数)*5
	+ 画面シナリオ
		+ 変更終了
		+ 内定ボタンの作成
+ クラス図に関して
	+ DMどこ行った？
	+ UserID(メアド)とUserに割り振られるID(auto increment)をクラス図にどう表記するか(そもそもauto incrementの方はクラス図に書くのか)
	+ エニアグラムを別テーブルとして管理するか(別テーブルにするかどうかに関わらずクラス図にはどう描くか)
	+ 職種IDを利用者に書くか
	+ エニアグラムはクラス図では分けるけど、データベースでは分けよう.
+ シーケン図
	+ 割り振り決定
メンバー|割り振り
--- | ---
松原未和|アカウント登録
小野瑞貴|マッチング閲覧
古田龍将|アカウント変更
渡辺みどり|ユーザー削除
### 次回
+ 未定　Slack等で相談